version: "3"

# All the variables are defined in the .env file
networks:
  csvs_dbserver_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}

services:
  # This is the configuration for the database server
  csvs_dbserver:
    image: ${SID}_${DB_NAME}_i:${DB_IMAGE_TAG}
    container_name: ${SID}_${DB_NAME}_c
    build:
      context: ${DB_PATH}
      dockerfile: Dockerfile
    networks:
      csvs_dbserver_net:
        ipv4_address: ${DB_IP}
    hostname: ${DB_HOSTNAME}
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/db_root_password
      MYSQL_DATABASE: "${DB_DATABASE}"
    volumes:
      - db_data:/var/lib/mysql 
      - ./dbserver/sqlconfig:/docker-entrypoint-initdb.d :ro # Mounting SQL configuration files as read-only
    tmpfs:
      - /tmp
    security_opt:
      - "no-new-privileges=true"
      - "seccomp=seccomp/mariadb.json"
    cap_drop:
      - ALL
    cap_add:
      - CAP_SETGID
      - CAP_SETUID
      - CAP_DAC_OVERRIDE
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512M
          pids: 15
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "healthcheck.sh --su-mysql --connect --innodb_initialized || exit 1"]  #Health check command for the database server
      interval: 30s 
      timeout: 10s
      retries: 3
# This is the configuration for the webserver server
  csvs_webserver:
    image: ${SID}_${WEB_NAME}_i:${WEB_IMAGE_TAG}
    container_name: ${SID}_${WEB_NAME}_c
    build:
      context: ${WEB_PATH}
      dockerfile: Dockerfile
    ports:
      - "${WEB_SERVER_PORT}:80"
    networks:
      - csvs_dbserver_net
    hostname: ${WEB_HOSTNAME}
    restart: "no"
    extra_hosts:
      - "${DB_HOSTNAME}:${DB_IP}"
    depends_on:
      - csvs_dbserver
    tmpfs:
      - /tmp
    security_opt:
      - "no-new-privileges=true"
      - "seccomp=seccomp/webapp.json"
    cap_drop:
      - ALL
    cap_add:
      - CAP_CHOWN
      - CAP_SETGID
      - CAP_SETUID
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M
          pids: 30
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    secrets:
      - db_password # Mounting the secret for the database password
    healthcheck: 
      test: ["CMD-SHELL", "curl -f http://localhost  || exit 1"] # Health check command for the web server
      interval: 30s     
      timeout: 10s
      retries: 3
      
secrets:
  db_password:
    file: dbserver/db_password.txt # Path to the file containing the database password secret
  db_root_password:
    file: dbserver/db_root_password.txt #Path to the file containing the root password secret

volumes:
  db_data:
    driver_opts:
      size: 500MiB