apiVersion: v1
kind: Service
metadata:
  name: csvs-webserver
  labels:
    app: csvs-webserver
spec:
  ports:
    - port: 80
  selector:
    app: csvs-webserver
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file docker-compose.yml convert
    kompose.version: 1.30.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: csvs-webserver
  name: csvs-webserver
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: csvs-webserver
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose --file docker-compose.yml convert
        kompose.version: 1.30.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/helm-chart-csvs-dbserver-net: "true"
        io.kompose.service: csvs-webserver
    spec:
      containers:
        - image: u5577491_csvs_webserver_i:1.5
          name: u5577491-csvs-webserver-c
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: "104857600"
          volumeMounts:
            - mountPath: /run/secrets/db-password
              name: db-password
      hostname: wwwcyber23test
      restartPolicy: Always
      volumes:
        - name: db-password
          secret:
            items:
              - key: db-password
                path: db-password
            secretName: db-password
status: {}
